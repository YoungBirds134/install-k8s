    sudo kubeadm init --ignore-preflight-errors=NumCPU,Mem --apiserver-advertise-address=192.168.1.13 --pod-network-cidr=192.168.0.0/16

kubectl delete -f https://raw.githubusercontent.com/metallb/metallb/v0.13.9/config/manifests/metallb-native.yaml

kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.7.1/deploy/static/provider/cloud/deploy.yaml

kubectl delete -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml

sudo kubeadm init --apiserver-advertise-address=192.168.1.13  --pod-network-cidr=10.244.0.0/16
&& sudo rm -rf $HOME/.kube
&& sudo mkdir -p $HOME/.kube
&& sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
&& sudo chown $(id -u):$(id -g) $HOME/.kube/config
&& kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml



kubectl delete -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml

    sudo kubeadm reset -f

sudo rm -f /etc/cni/net.d/10-flannel.conflist
sudo iptables -F && sudo iptables -t nat -F && sudo iptables -t mangle -F && sudo iptables -X
sudo rm -f $HOME/.kube/config



kubectl delete -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.1/cert-manager.yaml
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.1/cert-manager.yaml

kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml

sudo curl -iv -L \
      --cert /etc/kubernetes/pki/apiserver-kubelet-client.crt \
      --key  /etc/kubernetes/pki/apiserver-kubelet-client.key \
      --cacert /etc/kubernetes/pki/ca.crt \
 https://192.168.1.13:6443/healthz

sudo curl --cacert /etc/kubernetes/pki/ca.crt --cert /etc/kubernetes/pki/apiserver-kubelet-client.crt --key /etc/kubernetes/pki/apiserver-kubelet-client.key https://192.168.1.13:6443/v1/namespaces/kube-public/configmaps/cluster-info


Default k8s tắt firewall và swap 

luôn chạy ở worker node 

làm việc ở worker noide


ingress-nginx    ingress-nginx-controller             LoadBalancer   10.99.240.93     192.168.1.13   80:32499/TCP,443:30126/TCP   17h


làm việc ở 30126

192.168.1.13 lấy ip worker node làm lb telnet 192.168.1.13 30126. cong24h.comn  

có thể tạo https file pem rồi map vào 



scp -r /etc/kubernetes/admin.conf 192.168.1.11:~/.kube/config-mycluster
